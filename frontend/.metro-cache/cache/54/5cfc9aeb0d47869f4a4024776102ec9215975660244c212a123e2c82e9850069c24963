{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BlendMode\", {\n    enumerable: true,\n    get: function () {\n      return BlendMode;\n    }\n  });\n  /**\n   *  Blends are operators that take in two colors (source, destination) and\n   * return a new color. Many of these operate the same on all 4 components: red,\n   * green, blue, alpha. For these, we just document what happens to one\n   * component, rather than naming each one separately.\n   *\n   *  Different SkColorTypes have different representations for color components:\n   *      8-bit: 0..255\n   *      6-bit: 0..63\n   *      5-bit: 0..31\n   *      4-bit: 0..15\n   *     floats: 0...1\n   *\n   *  The documentation is expressed as if the component values are always 0..1\n   * (floats).\n   *\n   *  For brevity, the documentation uses the following abbreviations\n   *  s  : source\n   *  d  : destination\n   *  sa : source alpha\n   *  da : destination alpha\n   *\n   *  Results are abbreviated\n   *  r  : if all 4 components are computed in the same manner\n   *  ra : result alpha component\n   *  rc : result \"color\": red, green, blue components\n   */\n  var BlendMode = /*#__PURE__*/function (BlendMode) {\n    BlendMode[BlendMode[\"Clear\"] = 0] = \"Clear\";\n    //!< r = 0\n    BlendMode[BlendMode[\"Src\"] = 1] = \"Src\";\n    //!< r = s\n    BlendMode[BlendMode[\"Dst\"] = 2] = \"Dst\";\n    //!< r = d\n    BlendMode[BlendMode[\"SrcOver\"] = 3] = \"SrcOver\";\n    //!< r = s + (1-sa)*d\n    BlendMode[BlendMode[\"DstOver\"] = 4] = \"DstOver\";\n    //!< r = d + (1-da)*s\n    BlendMode[BlendMode[\"SrcIn\"] = 5] = \"SrcIn\";\n    //!< r = s * da\n    BlendMode[BlendMode[\"DstIn\"] = 6] = \"DstIn\";\n    //!< r = d * sa\n    BlendMode[BlendMode[\"SrcOut\"] = 7] = \"SrcOut\";\n    //!< r = s * (1-da)\n    BlendMode[BlendMode[\"DstOut\"] = 8] = \"DstOut\";\n    //!< r = d * (1-sa)\n    BlendMode[BlendMode[\"SrcATop\"] = 9] = \"SrcATop\";\n    //!< r = s*da + d*(1-sa)\n    BlendMode[BlendMode[\"DstATop\"] = 10] = \"DstATop\";\n    //!< r = d*sa + s*(1-da)\n    BlendMode[BlendMode[\"Xor\"] = 11] = \"Xor\";\n    //!< r = s*(1-da) + d*(1-sa)\n    BlendMode[BlendMode[\"Plus\"] = 12] = \"Plus\";\n    //!< r = min(s + d, 1)\n    BlendMode[BlendMode[\"Modulate\"] = 13] = \"Modulate\";\n    //!< r = s*d\n    BlendMode[BlendMode[\"Screen\"] = 14] = \"Screen\";\n    //!< r = s + d - s*d\n    BlendMode[BlendMode[\"Overlay\"] = 15] = \"Overlay\";\n    //!< multiply or screen, depending on destination\n    BlendMode[BlendMode[\"Darken\"] = 16] = \"Darken\";\n    //!< rc = s + d - max(s*da, d*sa), ra = kSrcOver\n    BlendMode[BlendMode[\"Lighten\"] = 17] = \"Lighten\";\n    //!< rc = s + d - min(s*da, d*sa), ra = kSrcOver\n    BlendMode[BlendMode[\"ColorDodge\"] = 18] = \"ColorDodge\";\n    //!< brighten destination to reflect source\n    BlendMode[BlendMode[\"ColorBurn\"] = 19] = \"ColorBurn\";\n    //!< darken destination to reflect source\n    BlendMode[BlendMode[\"HardLight\"] = 20] = \"HardLight\";\n    //!< multiply or screen, depending on source\n    BlendMode[BlendMode[\"SoftLight\"] = 21] = \"SoftLight\";\n    //!< lighten or darken, depending on source\n    BlendMode[BlendMode[\"Difference\"] = 22] = \"Difference\";\n    //!< rc = s + d - 2*(min(s*da, d*sa)), ra = kSrcOver\n    BlendMode[BlendMode[\"Exclusion\"] = 23] = \"Exclusion\";\n    //!< rc = s + d - two(s*d), ra = kSrcOver\n    BlendMode[BlendMode[\"Multiply\"] = 24] = \"Multiply\";\n    //!< r = s*(1-da) + d*(1-sa) + s*d\n    BlendMode[BlendMode[\"Hue\"] = 25] = \"Hue\";\n    //!< hue of source with saturation and luminosity of destination\n    BlendMode[BlendMode[\"Saturation\"] = 26] = \"Saturation\";\n    //!< saturation of source with hue and luminosity of\n    //!< destination\n    BlendMode[BlendMode[\"Color\"] = 27] = \"Color\";\n    //!< hue and saturation of source with luminosity of destination\n    BlendMode[BlendMode[\"Luminosity\"] = 28] = \"Luminosity\"; //!< luminosity of source with hue and saturation of\n    return BlendMode;\n  }({});\n});","lineCount":101,"map":[[7,2,28,0,"Object"],[7,8,28,0],[7,9,28,0,"defineProperty"],[7,23,28,0],[7,24,28,0,"exports"],[7,31,28,0],[8,4,28,0,"enumerable"],[8,14,28,0],[9,4,28,0,"get"],[9,7,28,0],[9,18,28,0,"get"],[9,19,28,0],[10,6,28,0],[10,13,28,0,"BlendMode"],[10,22,28,0],[11,4,28,0],[12,2,28,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,2,1,0],[40,6,28,12,"BlendMode"],[40,15,28,21],[40,41,28,12,"BlendMode"],[40,50,28,21],[41,4,28,12,"BlendMode"],[41,13,28,21],[41,14,28,12,"BlendMode"],[41,23,28,21],[42,4,29,9],[43,4,28,12,"BlendMode"],[43,13,28,21],[43,14,28,12,"BlendMode"],[43,23,28,21],[44,4,30,7],[45,4,28,12,"BlendMode"],[45,13,28,21],[45,14,28,12,"BlendMode"],[45,23,28,21],[46,4,31,7],[47,4,28,12,"BlendMode"],[47,13,28,21],[47,14,28,12,"BlendMode"],[47,23,28,21],[48,4,32,11],[49,4,28,12,"BlendMode"],[49,13,28,21],[49,14,28,12,"BlendMode"],[49,23,28,21],[50,4,33,11],[51,4,28,12,"BlendMode"],[51,13,28,21],[51,14,28,12,"BlendMode"],[51,23,28,21],[52,4,34,9],[53,4,28,12,"BlendMode"],[53,13,28,21],[53,14,28,12,"BlendMode"],[53,23,28,21],[54,4,35,9],[55,4,28,12,"BlendMode"],[55,13,28,21],[55,14,28,12,"BlendMode"],[55,23,28,21],[56,4,36,10],[57,4,28,12,"BlendMode"],[57,13,28,21],[57,14,28,12,"BlendMode"],[57,23,28,21],[58,4,37,10],[59,4,28,12,"BlendMode"],[59,13,28,21],[59,14,28,12,"BlendMode"],[59,23,28,21],[60,4,38,11],[61,4,28,12,"BlendMode"],[61,13,28,21],[61,14,28,12,"BlendMode"],[61,23,28,21],[62,4,39,11],[63,4,28,12,"BlendMode"],[63,13,28,21],[63,14,28,12,"BlendMode"],[63,23,28,21],[64,4,40,7],[65,4,28,12,"BlendMode"],[65,13,28,21],[65,14,28,12,"BlendMode"],[65,23,28,21],[66,4,41,8],[67,4,28,12,"BlendMode"],[67,13,28,21],[67,14,28,12,"BlendMode"],[67,23,28,21],[68,4,42,12],[69,4,28,12,"BlendMode"],[69,13,28,21],[69,14,28,12,"BlendMode"],[69,23,28,21],[70,4,43,10],[71,4,28,12,"BlendMode"],[71,13,28,21],[71,14,28,12,"BlendMode"],[71,23,28,21],[72,4,45,11],[73,4,28,12,"BlendMode"],[73,13,28,21],[73,14,28,12,"BlendMode"],[73,23,28,21],[74,4,46,10],[75,4,28,12,"BlendMode"],[75,13,28,21],[75,14,28,12,"BlendMode"],[75,23,28,21],[76,4,47,11],[77,4,28,12,"BlendMode"],[77,13,28,21],[77,14,28,12,"BlendMode"],[77,23,28,21],[78,4,48,14],[79,4,28,12,"BlendMode"],[79,13,28,21],[79,14,28,12,"BlendMode"],[79,23,28,21],[80,4,49,13],[81,4,28,12,"BlendMode"],[81,13,28,21],[81,14,28,12,"BlendMode"],[81,23,28,21],[82,4,50,13],[83,4,28,12,"BlendMode"],[83,13,28,21],[83,14,28,12,"BlendMode"],[83,23,28,21],[84,4,51,13],[85,4,28,12,"BlendMode"],[85,13,28,21],[85,14,28,12,"BlendMode"],[85,23,28,21],[86,4,52,14],[87,4,28,12,"BlendMode"],[87,13,28,21],[87,14,28,12,"BlendMode"],[87,23,28,21],[88,4,53,13],[89,4,28,12,"BlendMode"],[89,13,28,21],[89,14,28,12,"BlendMode"],[89,23,28,21],[90,4,54,12],[91,4,28,12,"BlendMode"],[91,13,28,21],[91,14,28,12,"BlendMode"],[91,23,28,21],[92,4,56,7],[93,4,28,12,"BlendMode"],[93,13,28,21],[93,14,28,12,"BlendMode"],[93,23,28,21],[94,4,57,14],[95,4,58,2],[96,4,28,12,"BlendMode"],[96,13,28,21],[96,14,28,12,"BlendMode"],[96,23,28,21],[97,4,59,9],[98,4,28,12,"BlendMode"],[98,13,28,21],[98,14,28,12,"BlendMode"],[98,23,28,21],[98,60,60,14],[99,4,60,14],[99,11,28,12,"BlendMode"],[99,20,28,21],[100,2,28,21],[101,0,28,21],[101,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":false},"type":"js/module"}]}