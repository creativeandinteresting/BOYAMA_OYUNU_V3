{"dependencies":[{"name":"../../Platform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"AXHAxFjlDdeq1JxYZnWn+aHYhYU=","exportNames":["*"],"imports":1}},{"name":"../Skia","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":31,"index":74}}],"key":"5eRJ3Y/mp/EEiynYa3WwzXcSMXc=","exportNames":["*"],"imports":1}},{"name":"./Data","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":75},"end":{"line":3,"column":36,"index":111}}],"key":"0fS75tjqpJdM3ThONBfvzOQKEI0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useImage\", {\n    enumerable: true,\n    get: function () {\n      return useImage;\n    }\n  });\n  Object.defineProperty(exports, \"makeImageFromView\", {\n    enumerable: true,\n    get: function () {\n      return makeImageFromView;\n    }\n  });\n  var _Platform = require(_dependencyMap[0], \"../../Platform\");\n  var _Skia = require(_dependencyMap[1], \"../Skia\");\n  var _Data = require(_dependencyMap[2], \"./Data\");\n  const imgFactory = _Skia.Skia.Image.MakeImageFromEncoded.bind(_Skia.Skia.Image);\n\n  /**\n   * Returns a Skia Image object\n   * */\n  const useImage = (source, onError) => (0, _Data.useRawData)(source, imgFactory, onError);\n\n  /**\n   * Creates an image from a given view reference. NOTE: This method has different implementations\n   * on web/native. On web, the callback is called with the view ref and the callback is expected to\n   * return a promise that resolves to a Skia Image object. On native, the view ref is used to\n   * find the view tag and the Skia Image object is created from the view tag. This means that on web\n   * you will need to implement the logic to create the image from the view ref yourself.\n   * @param viewRef Ref to the view we're creating an image from\n   * @returns A promise that resolves to a Skia Image object or rejects\n   * with an error id the view tag is invalid.\n   */\n  const makeImageFromView = (viewRef, callback = null) => {\n    // In web implementation we just delegate the work to the provided callback\n    if (_Platform.Platform.OS === \"web\") {\n      if (callback) {\n        return callback(viewRef);\n      } else {\n        Promise.reject(new Error(\"Callback is required on web in the makeImageFromView function.\"));\n      }\n    }\n    const viewTag = _Platform.Platform.findNodeHandle(viewRef.current);\n    if (viewTag !== null && viewTag !== 0) {\n      return _Skia.Skia.Image.MakeImageFromViewTag(viewTag);\n    }\n    return Promise.reject(new Error(\"Invalid view tag\"));\n  };\n});","lineCount":54,"map":[[7,2,9,0,"Object"],[7,8,9,0],[7,9,9,0,"defineProperty"],[7,23,9,0],[7,24,9,0,"exports"],[7,31,9,0],[8,4,9,0,"enumerable"],[8,14,9,0],[9,4,9,0,"get"],[9,7,9,0],[9,18,9,0,"get"],[9,19,9,0],[10,6,9,0],[10,13,9,0,"useImage"],[10,21,9,0],[11,4,9,0],[12,2,9,0],[13,2,21,0,"Object"],[13,8,21,0],[13,9,21,0,"defineProperty"],[13,23,21,0],[13,24,21,0,"exports"],[13,31,21,0],[14,4,21,0,"enumerable"],[14,14,21,0],[15,4,21,0,"get"],[15,7,21,0],[15,18,21,0,"get"],[15,19,21,0],[16,6,21,0],[16,13,21,0,"makeImageFromView"],[16,30,21,0],[17,4,21,0],[18,2,21,0],[19,2,1,0],[19,6,1,0,"_Platform"],[19,15,1,0],[19,18,1,0,"require"],[19,25,1,0],[19,26,1,0,"_dependencyMap"],[19,40,1,0],[20,2,2,0],[20,6,2,0,"_Skia"],[20,11,2,0],[20,14,2,0,"require"],[20,21,2,0],[20,22,2,0,"_dependencyMap"],[20,36,2,0],[21,2,3,0],[21,6,3,0,"_Data"],[21,11,3,0],[21,14,3,0,"require"],[21,21,3,0],[21,22,3,0,"_dependencyMap"],[21,36,3,0],[22,2,4,0],[22,8,4,6,"imgFactory"],[22,18,4,16],[22,21,4,19,"Skia"],[22,26,4,23],[22,27,4,23,"Skia"],[22,31,4,23],[22,32,4,24,"Image"],[22,37,4,29],[22,38,4,30,"MakeImageFromEncoded"],[22,58,4,50],[22,59,4,51,"bind"],[22,63,4,55],[22,64,4,56,"Skia"],[22,69,4,60],[22,70,4,60,"Skia"],[22,74,4,60],[22,75,4,61,"Image"],[22,80,4,66],[22,81,4,67],[24,2,6,0],[25,0,7,0],[26,0,8,0],[27,2,9,7],[27,8,9,13,"useImage"],[27,16,9,21],[27,19,9,24,"useImage"],[27,20,9,25,"source"],[27,26,9,31],[27,28,9,33,"onError"],[27,35,9,40],[27,40,9,45],[27,44,9,45,"useRawData"],[27,49,9,55],[27,50,9,55,"useRawData"],[27,60,9,55],[27,62,9,56,"source"],[27,68,9,62],[27,70,9,64,"imgFactory"],[27,80,9,74],[27,82,9,76,"onError"],[27,89,9,83],[27,90,9,84],[29,2,11,0],[30,0,12,0],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,0,17,0],[36,0,18,0],[37,0,19,0],[38,0,20,0],[39,2,21,7],[39,8,21,13,"makeImageFromView"],[39,25,21,30],[39,28,21,33,"makeImageFromView"],[39,29,21,34,"viewRef"],[39,36,21,41],[39,38,21,43,"callback"],[39,46,21,51],[39,49,21,54],[39,53,21,58],[39,58,21,63],[40,4,22,2],[41,4,23,2],[41,8,23,6,"Platform"],[41,17,23,14],[41,18,23,14,"Platform"],[41,26,23,14],[41,27,23,15,"OS"],[41,29,23,17],[41,34,23,22],[41,39,23,27],[41,41,23,29],[42,6,24,4],[42,10,24,8,"callback"],[42,18,24,16],[42,20,24,18],[43,8,25,6],[43,15,25,13,"callback"],[43,23,25,21],[43,24,25,22,"viewRef"],[43,31,25,29],[43,32,25,30],[44,6,26,4],[44,7,26,5],[44,13,26,11],[45,8,27,6,"Promise"],[45,15,27,13],[45,16,27,14,"reject"],[45,22,27,20],[45,23,27,21],[45,27,27,25,"Error"],[45,32,27,30],[45,33,27,31],[45,97,27,95],[45,98,27,96],[45,99,27,97],[46,6,28,4],[47,4,29,2],[48,4,30,2],[48,10,30,8,"viewTag"],[48,17,30,15],[48,20,30,18,"Platform"],[48,29,30,26],[48,30,30,26,"Platform"],[48,38,30,26],[48,39,30,27,"findNodeHandle"],[48,53,30,41],[48,54,30,42,"viewRef"],[48,61,30,49],[48,62,30,50,"current"],[48,69,30,57],[48,70,30,58],[49,4,31,2],[49,8,31,6,"viewTag"],[49,15,31,13],[49,20,31,18],[49,24,31,22],[49,28,31,26,"viewTag"],[49,35,31,33],[49,40,31,38],[49,41,31,39],[49,43,31,41],[50,6,32,4],[50,13,32,11,"Skia"],[50,18,32,15],[50,19,32,15,"Skia"],[50,23,32,15],[50,24,32,16,"Image"],[50,29,32,21],[50,30,32,22,"MakeImageFromViewTag"],[50,50,32,42],[50,51,32,43,"viewTag"],[50,58,32,50],[50,59,32,51],[51,4,33,2],[52,4,34,2],[52,11,34,9,"Promise"],[52,18,34,16],[52,19,34,17,"reject"],[52,25,34,23],[52,26,34,24],[52,30,34,28,"Error"],[52,35,34,33],[52,36,34,34],[52,54,34,52],[52,55,34,53],[52,56,34,54],[53,2,35,0],[53,3,35,1],[54,0,35,2],[54,3]],"functionMap":{"names":["<global>","useImage","makeImageFromView"],"mappings":"AAA;wBCQ,4DD;iCEY;CFc"},"hasCjsExports":false},"type":"js/module"}]}