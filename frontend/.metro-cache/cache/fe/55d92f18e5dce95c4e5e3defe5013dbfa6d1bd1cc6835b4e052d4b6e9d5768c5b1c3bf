{"dependencies":[{"name":"../../dom/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":43,"index":100}}],"key":"sExY87SNUbbJtOx4ghJnWxzXqE0=","exportNames":["*"],"imports":1}},{"name":"../Node","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":101},"end":{"line":4,"column":68,"index":169}}],"key":"629oO5tQuU3DWlSfXJ8iqlt7cNE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"processPaint\", {\n    enumerable: true,\n    get: function () {\n      return processPaint;\n    }\n  });\n  Object.defineProperty(exports, \"visit\", {\n    enumerable: true,\n    get: function () {\n      return visit;\n    }\n  });\n  var _domTypes = require(_dependencyMap[0], \"../../dom/types\");\n  var _Node = require(_dependencyMap[1], \"../Node\");\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n\n  const processPaint = ({\n    opacity,\n    color,\n    strokeWidth,\n    blendMode,\n    style,\n    strokeJoin,\n    strokeCap,\n    strokeMiter,\n    antiAlias,\n    dither,\n    paint: paintRef\n  }) => {\n    const paint = {};\n    if (opacity !== undefined) {\n      paint.opacity = opacity;\n    }\n    if (color !== undefined) {\n      paint.color = color;\n    }\n    if (strokeWidth !== undefined) {\n      paint.strokeWidth = strokeWidth;\n    }\n    if (blendMode !== undefined) {\n      paint.blendMode = blendMode;\n    }\n    if (style !== undefined) {\n      paint.style = style;\n    }\n    if (strokeJoin !== undefined) {\n      paint.strokeJoin = strokeJoin;\n    }\n    if (strokeCap !== undefined) {\n      paint.strokeCap = strokeCap;\n    }\n    if (strokeMiter !== undefined) {\n      paint.strokeMiter = strokeMiter;\n    }\n    if (antiAlias !== undefined) {\n      paint.antiAlias = antiAlias;\n    }\n    if (dither !== undefined) {\n      paint.dither = dither;\n    }\n    if (paintRef !== undefined) {\n      paint.paint = paintRef;\n    }\n    if (opacity !== undefined || color !== undefined || strokeWidth !== undefined || blendMode !== undefined || style !== undefined || strokeJoin !== undefined || strokeCap !== undefined || strokeMiter !== undefined || antiAlias !== undefined || dither !== undefined || paintRef !== undefined) {\n      return paint;\n    }\n    return null;\n  };\n  const processCTM = ({\n    clip,\n    invertClip,\n    transform,\n    origin,\n    matrix,\n    layer\n  }) => {\n    const ctm = {};\n    if (clip) {\n      ctm.clip = clip;\n    }\n    if (invertClip) {\n      ctm.invertClip = invertClip;\n    }\n    if (transform) {\n      ctm.transform = transform;\n    }\n    if (origin) {\n      ctm.origin = origin;\n    }\n    if (matrix) {\n      ctm.matrix = matrix;\n    }\n    if (layer) {\n      ctm.layer = layer;\n    }\n    if (clip !== undefined || invertClip !== undefined || transform !== undefined || origin !== undefined || matrix !== undefined || layer !== undefined) {\n      return ctm;\n    }\n    return null;\n  };\n  const pushColorFilters = (recorder, colorFilters) => {\n    colorFilters.forEach(colorFilter => {\n      if (colorFilter.children.length > 0) {\n        pushColorFilters(recorder, colorFilter.children);\n      }\n      recorder.pushColorFilter(colorFilter.type, colorFilter.props);\n      const needsComposition = colorFilter.type !== _domTypes.NodeType.LerpColorFilter && colorFilter.children.length > 0;\n      if (needsComposition) {\n        recorder.composeColorFilter();\n      }\n    });\n  };\n  const pushPathEffects = (recorder, pathEffects) => {\n    pathEffects.forEach(pathEffect => {\n      if (pathEffect.children.length > 0) {\n        pushPathEffects(recorder, pathEffect.children);\n      }\n      recorder.pushPathEffect(pathEffect.type, pathEffect.props);\n      const needsComposition = pathEffect.type !== _domTypes.NodeType.SumPathEffect && pathEffect.children.length > 0;\n      if (needsComposition) {\n        recorder.composePathEffect();\n      }\n    });\n  };\n  const pushImageFilters = (recorder, imageFilters) => {\n    imageFilters.forEach(imageFilter => {\n      if (imageFilter.children.length > 0) {\n        pushImageFilters(recorder, imageFilter.children);\n      }\n      if ((0, _Node.isImageFilter)(imageFilter.type)) {\n        recorder.pushImageFilter(imageFilter.type, imageFilter.props);\n      } else if ((0, _Node.isShader)(imageFilter.type)) {\n        recorder.pushShader(imageFilter.type, imageFilter.props, 0);\n      }\n      const needsComposition = imageFilter.type !== _domTypes.NodeType.BlendImageFilter && imageFilter.children.length > 0;\n      if (needsComposition) {\n        recorder.composeImageFilter();\n      }\n    });\n  };\n  const pushShaders = (recorder, shaders) => {\n    shaders.forEach(shader => {\n      if (shader.children.length > 0) {\n        pushShaders(recorder, shader.children);\n      }\n      recorder.pushShader(shader.type, shader.props, shader.children.length);\n    });\n  };\n  const pushMaskFilters = (recorder, maskFilters) => {\n    if (maskFilters.length > 0) {\n      recorder.pushBlurMaskFilter(maskFilters[maskFilters.length - 1].props);\n    }\n  };\n  const pushPaints = (recorder, paints) => {\n    paints.forEach(paint => {\n      recorder.savePaint(paint.props, true);\n      const {\n        colorFilters,\n        maskFilters,\n        shaders,\n        imageFilters,\n        pathEffects\n      } = (0, _Node.sortNodeChildren)(paint);\n      pushColorFilters(recorder, colorFilters);\n      pushImageFilters(recorder, imageFilters);\n      pushMaskFilters(recorder, maskFilters);\n      pushShaders(recorder, shaders);\n      pushPathEffects(recorder, pathEffects);\n      recorder.restorePaintDeclaration();\n    });\n  };\n  const visitNode = (recorder, node) => {\n    if (node.type === _domTypes.NodeType.Group) {\n      recorder.saveGroup();\n    }\n    const {\n      props\n    } = node;\n    const {\n      colorFilters,\n      maskFilters,\n      drawings,\n      shaders,\n      imageFilters,\n      pathEffects,\n      paints\n    } = (0, _Node.sortNodeChildren)(node);\n    const paint = processPaint(props);\n    const shouldPushPaint = paint || colorFilters.length > 0 || maskFilters.length > 0 || imageFilters.length > 0 || pathEffects.length > 0 || shaders.length > 0;\n    if (shouldPushPaint) {\n      recorder.savePaint(paint !== null && paint !== void 0 ? paint : {}, false);\n      pushColorFilters(recorder, colorFilters);\n      pushImageFilters(recorder, imageFilters);\n      pushMaskFilters(recorder, maskFilters);\n      pushShaders(recorder, shaders);\n      pushPathEffects(recorder, pathEffects);\n      // For mixed nodes like BackdropFilters we don't materialize the paint\n      if (node.type === _domTypes.NodeType.BackdropFilter) {\n        recorder.saveBackdropFilter();\n      } else {\n        recorder.materializePaint();\n      }\n    }\n    pushPaints(recorder, paints);\n    if (node.type === _domTypes.NodeType.Layer) {\n      recorder.saveLayer();\n    }\n    const ctm = processCTM(props);\n    const shouldRestore = !!ctm || node.type === _domTypes.NodeType.Layer;\n    if (ctm) {\n      recorder.saveCTM(ctm);\n    }\n    switch (node.type) {\n      case _domTypes.NodeType.Box:\n        const shadows = node.children.filter(n => n.type === _domTypes.NodeType.BoxShadow)\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        .map(({\n          props\n        }) => ({\n          props\n        }));\n        recorder.drawBox(props, shadows);\n        break;\n      case _domTypes.NodeType.Fill:\n        recorder.drawPaint();\n        break;\n      case _domTypes.NodeType.Image:\n        recorder.drawImage(props);\n        break;\n      case _domTypes.NodeType.Circle:\n        recorder.drawCircle(props);\n        break;\n      case _domTypes.NodeType.Points:\n        recorder.drawPoints(props);\n        break;\n      case _domTypes.NodeType.Path:\n        recorder.drawPath(props);\n        break;\n      case _domTypes.NodeType.Rect:\n        recorder.drawRect(props);\n        break;\n      case _domTypes.NodeType.RRect:\n        recorder.drawRRect(props);\n        break;\n      case _domTypes.NodeType.Oval:\n        recorder.drawOval(props);\n        break;\n      case _domTypes.NodeType.Line:\n        recorder.drawLine(props);\n        break;\n      case _domTypes.NodeType.Patch:\n        recorder.drawPatch(props);\n        break;\n      case _domTypes.NodeType.Vertices:\n        recorder.drawVertices(props);\n        break;\n      case _domTypes.NodeType.DiffRect:\n        recorder.drawDiffRect(props);\n        break;\n      case _domTypes.NodeType.Text:\n        recorder.drawText(props);\n        break;\n      case _domTypes.NodeType.TextPath:\n        recorder.drawTextPath(props);\n        break;\n      case _domTypes.NodeType.TextBlob:\n        recorder.drawTextBlob(props);\n        break;\n      case _domTypes.NodeType.Glyphs:\n        recorder.drawGlyphs(props);\n        break;\n      case _domTypes.NodeType.Picture:\n        recorder.drawPicture(props);\n        break;\n      case _domTypes.NodeType.ImageSVG:\n        recorder.drawImageSVG(props);\n        break;\n      case _domTypes.NodeType.Paragraph:\n        recorder.drawParagraph(props);\n        break;\n      case _domTypes.NodeType.Skottie:\n        recorder.drawSkottie(props);\n        break;\n      case _domTypes.NodeType.Atlas:\n        recorder.drawAtlas(props);\n        break;\n    }\n    drawings.forEach(drawing => {\n      visitNode(recorder, drawing);\n    });\n    if (shouldPushPaint) {\n      recorder.restorePaint();\n    }\n    if (shouldRestore) {\n      recorder.restoreCTM();\n    }\n    if (node.type === _domTypes.NodeType.Group) {\n      recorder.restoreGroup();\n    }\n  };\n  const visit = (recorder, root) => {\n    root.forEach(node => {\n      visitNode(recorder, node);\n    });\n  };\n});","lineCount":312,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"processPaint"],[10,25,5,0],[11,4,5,0],[12,2,5,0],[13,2,289,0,"Object"],[13,8,289,0],[13,9,289,0,"defineProperty"],[13,23,289,0],[13,24,289,0,"exports"],[13,31,289,0],[14,4,289,0,"enumerable"],[14,14,289,0],[15,4,289,0,"get"],[15,7,289,0],[15,18,289,0,"get"],[15,19,289,0],[16,6,289,0],[16,13,289,0,"visit"],[16,18,289,0],[17,4,289,0],[18,2,289,0],[19,2,3,0],[19,6,3,0,"_domTypes"],[19,15,3,0],[19,18,3,0,"require"],[19,25,3,0],[19,26,3,0,"_dependencyMap"],[19,40,3,0],[20,2,4,0],[20,6,4,0,"_Node"],[20,11,4,0],[20,14,4,0,"require"],[20,21,4,0],[20,22,4,0,"_dependencyMap"],[20,36,4,0],[21,2,1,0],[23,2,5,7],[23,8,5,13,"processPaint"],[23,20,5,25],[23,23,5,28,"processPaint"],[23,24,5,29],[24,4,6,2,"opacity"],[24,11,6,9],[25,4,7,2,"color"],[25,9,7,7],[26,4,8,2,"strokeWidth"],[26,15,8,13],[27,4,9,2,"blendMode"],[27,13,9,11],[28,4,10,2,"style"],[28,9,10,7],[29,4,11,2,"strokeJoin"],[29,14,11,12],[30,4,12,2,"strokeCap"],[30,13,12,11],[31,4,13,2,"strokeMiter"],[31,15,13,13],[32,4,14,2,"antiAlias"],[32,13,14,11],[33,4,15,2,"dither"],[33,10,15,8],[34,4,16,2,"paint"],[34,9,16,7],[34,11,16,9,"paintRef"],[35,2,17,0],[35,3,17,1],[35,8,17,6],[36,4,18,2],[36,10,18,8,"paint"],[36,15,18,13],[36,18,18,16],[36,19,18,17],[36,20,18,18],[37,4,19,2],[37,8,19,6,"opacity"],[37,15,19,13],[37,20,19,18,"undefined"],[37,29,19,27],[37,31,19,29],[38,6,20,4,"paint"],[38,11,20,9],[38,12,20,10,"opacity"],[38,19,20,17],[38,22,20,20,"opacity"],[38,29,20,27],[39,4,21,2],[40,4,22,2],[40,8,22,6,"color"],[40,13,22,11],[40,18,22,16,"undefined"],[40,27,22,25],[40,29,22,27],[41,6,23,4,"paint"],[41,11,23,9],[41,12,23,10,"color"],[41,17,23,15],[41,20,23,18,"color"],[41,25,23,23],[42,4,24,2],[43,4,25,2],[43,8,25,6,"strokeWidth"],[43,19,25,17],[43,24,25,22,"undefined"],[43,33,25,31],[43,35,25,33],[44,6,26,4,"paint"],[44,11,26,9],[44,12,26,10,"strokeWidth"],[44,23,26,21],[44,26,26,24,"strokeWidth"],[44,37,26,35],[45,4,27,2],[46,4,28,2],[46,8,28,6,"blendMode"],[46,17,28,15],[46,22,28,20,"undefined"],[46,31,28,29],[46,33,28,31],[47,6,29,4,"paint"],[47,11,29,9],[47,12,29,10,"blendMode"],[47,21,29,19],[47,24,29,22,"blendMode"],[47,33,29,31],[48,4,30,2],[49,4,31,2],[49,8,31,6,"style"],[49,13,31,11],[49,18,31,16,"undefined"],[49,27,31,25],[49,29,31,27],[50,6,32,4,"paint"],[50,11,32,9],[50,12,32,10,"style"],[50,17,32,15],[50,20,32,18,"style"],[50,25,32,23],[51,4,33,2],[52,4,34,2],[52,8,34,6,"strokeJoin"],[52,18,34,16],[52,23,34,21,"undefined"],[52,32,34,30],[52,34,34,32],[53,6,35,4,"paint"],[53,11,35,9],[53,12,35,10,"strokeJoin"],[53,22,35,20],[53,25,35,23,"strokeJoin"],[53,35,35,33],[54,4,36,2],[55,4,37,2],[55,8,37,6,"strokeCap"],[55,17,37,15],[55,22,37,20,"undefined"],[55,31,37,29],[55,33,37,31],[56,6,38,4,"paint"],[56,11,38,9],[56,12,38,10,"strokeCap"],[56,21,38,19],[56,24,38,22,"strokeCap"],[56,33,38,31],[57,4,39,2],[58,4,40,2],[58,8,40,6,"strokeMiter"],[58,19,40,17],[58,24,40,22,"undefined"],[58,33,40,31],[58,35,40,33],[59,6,41,4,"paint"],[59,11,41,9],[59,12,41,10,"strokeMiter"],[59,23,41,21],[59,26,41,24,"strokeMiter"],[59,37,41,35],[60,4,42,2],[61,4,43,2],[61,8,43,6,"antiAlias"],[61,17,43,15],[61,22,43,20,"undefined"],[61,31,43,29],[61,33,43,31],[62,6,44,4,"paint"],[62,11,44,9],[62,12,44,10,"antiAlias"],[62,21,44,19],[62,24,44,22,"antiAlias"],[62,33,44,31],[63,4,45,2],[64,4,46,2],[64,8,46,6,"dither"],[64,14,46,12],[64,19,46,17,"undefined"],[64,28,46,26],[64,30,46,28],[65,6,47,4,"paint"],[65,11,47,9],[65,12,47,10,"dither"],[65,18,47,16],[65,21,47,19,"dither"],[65,27,47,25],[66,4,48,2],[67,4,49,2],[67,8,49,6,"paintRef"],[67,16,49,14],[67,21,49,19,"undefined"],[67,30,49,28],[67,32,49,30],[68,6,50,4,"paint"],[68,11,50,9],[68,12,50,10,"paint"],[68,17,50,15],[68,20,50,18,"paintRef"],[68,28,50,26],[69,4,51,2],[70,4,52,2],[70,8,52,6,"opacity"],[70,15,52,13],[70,20,52,18,"undefined"],[70,29,52,27],[70,33,52,31,"color"],[70,38,52,36],[70,43,52,41,"undefined"],[70,52,52,50],[70,56,52,54,"strokeWidth"],[70,67,52,65],[70,72,52,70,"undefined"],[70,81,52,79],[70,85,52,83,"blendMode"],[70,94,52,92],[70,99,52,97,"undefined"],[70,108,52,106],[70,112,52,110,"style"],[70,117,52,115],[70,122,52,120,"undefined"],[70,131,52,129],[70,135,52,133,"strokeJoin"],[70,145,52,143],[70,150,52,148,"undefined"],[70,159,52,157],[70,163,52,161,"strokeCap"],[70,172,52,170],[70,177,52,175,"undefined"],[70,186,52,184],[70,190,52,188,"strokeMiter"],[70,201,52,199],[70,206,52,204,"undefined"],[70,215,52,213],[70,219,52,217,"antiAlias"],[70,228,52,226],[70,233,52,231,"undefined"],[70,242,52,240],[70,246,52,244,"dither"],[70,252,52,250],[70,257,52,255,"undefined"],[70,266,52,264],[70,270,52,268,"paintRef"],[70,278,52,276],[70,283,52,281,"undefined"],[70,292,52,290],[70,294,52,292],[71,6,53,4],[71,13,53,11,"paint"],[71,18,53,16],[72,4,54,2],[73,4,55,2],[73,11,55,9],[73,15,55,13],[74,2,56,0],[74,3,56,1],[75,2,57,0],[75,8,57,6,"processCTM"],[75,18,57,16],[75,21,57,19,"processCTM"],[75,22,57,20],[76,4,58,2,"clip"],[76,8,58,6],[77,4,59,2,"invertClip"],[77,14,59,12],[78,4,60,2,"transform"],[78,13,60,11],[79,4,61,2,"origin"],[79,10,61,8],[80,4,62,2,"matrix"],[80,10,62,8],[81,4,63,2,"layer"],[82,2,64,0],[82,3,64,1],[82,8,64,6],[83,4,65,2],[83,10,65,8,"ctm"],[83,13,65,11],[83,16,65,14],[83,17,65,15],[83,18,65,16],[84,4,66,2],[84,8,66,6,"clip"],[84,12,66,10],[84,14,66,12],[85,6,67,4,"ctm"],[85,9,67,7],[85,10,67,8,"clip"],[85,14,67,12],[85,17,67,15,"clip"],[85,21,67,19],[86,4,68,2],[87,4,69,2],[87,8,69,6,"invertClip"],[87,18,69,16],[87,20,69,18],[88,6,70,4,"ctm"],[88,9,70,7],[88,10,70,8,"invertClip"],[88,20,70,18],[88,23,70,21,"invertClip"],[88,33,70,31],[89,4,71,2],[90,4,72,2],[90,8,72,6,"transform"],[90,17,72,15],[90,19,72,17],[91,6,73,4,"ctm"],[91,9,73,7],[91,10,73,8,"transform"],[91,19,73,17],[91,22,73,20,"transform"],[91,31,73,29],[92,4,74,2],[93,4,75,2],[93,8,75,6,"origin"],[93,14,75,12],[93,16,75,14],[94,6,76,4,"ctm"],[94,9,76,7],[94,10,76,8,"origin"],[94,16,76,14],[94,19,76,17,"origin"],[94,25,76,23],[95,4,77,2],[96,4,78,2],[96,8,78,6,"matrix"],[96,14,78,12],[96,16,78,14],[97,6,79,4,"ctm"],[97,9,79,7],[97,10,79,8,"matrix"],[97,16,79,14],[97,19,79,17,"matrix"],[97,25,79,23],[98,4,80,2],[99,4,81,2],[99,8,81,6,"layer"],[99,13,81,11],[99,15,81,13],[100,6,82,4,"ctm"],[100,9,82,7],[100,10,82,8,"layer"],[100,15,82,13],[100,18,82,16,"layer"],[100,23,82,21],[101,4,83,2],[102,4,84,2],[102,8,84,6,"clip"],[102,12,84,10],[102,17,84,15,"undefined"],[102,26,84,24],[102,30,84,28,"invertClip"],[102,40,84,38],[102,45,84,43,"undefined"],[102,54,84,52],[102,58,84,56,"transform"],[102,67,84,65],[102,72,84,70,"undefined"],[102,81,84,79],[102,85,84,83,"origin"],[102,91,84,89],[102,96,84,94,"undefined"],[102,105,84,103],[102,109,84,107,"matrix"],[102,115,84,113],[102,120,84,118,"undefined"],[102,129,84,127],[102,133,84,131,"layer"],[102,138,84,136],[102,143,84,141,"undefined"],[102,152,84,150],[102,154,84,152],[103,6,85,4],[103,13,85,11,"ctm"],[103,16,85,14],[104,4,86,2],[105,4,87,2],[105,11,87,9],[105,15,87,13],[106,2,88,0],[106,3,88,1],[107,2,89,0],[107,8,89,6,"pushColorFilters"],[107,24,89,22],[107,27,89,25,"pushColorFilters"],[107,28,89,26,"recorder"],[107,36,89,34],[107,38,89,36,"colorFilters"],[107,50,89,48],[107,55,89,53],[108,4,90,2,"colorFilters"],[108,16,90,14],[108,17,90,15,"forEach"],[108,24,90,22],[108,25,90,23,"colorFilter"],[108,36,90,34],[108,40,90,38],[109,6,91,4],[109,10,91,8,"colorFilter"],[109,21,91,19],[109,22,91,20,"children"],[109,30,91,28],[109,31,91,29,"length"],[109,37,91,35],[109,40,91,38],[109,41,91,39],[109,43,91,41],[110,8,92,6,"pushColorFilters"],[110,24,92,22],[110,25,92,23,"recorder"],[110,33,92,31],[110,35,92,33,"colorFilter"],[110,46,92,44],[110,47,92,45,"children"],[110,55,92,53],[110,56,92,54],[111,6,93,4],[112,6,94,4,"recorder"],[112,14,94,12],[112,15,94,13,"pushColorFilter"],[112,30,94,28],[112,31,94,29,"colorFilter"],[112,42,94,40],[112,43,94,41,"type"],[112,47,94,45],[112,49,94,47,"colorFilter"],[112,60,94,58],[112,61,94,59,"props"],[112,66,94,64],[112,67,94,65],[113,6,95,4],[113,12,95,10,"needsComposition"],[113,28,95,26],[113,31,95,29,"colorFilter"],[113,42,95,40],[113,43,95,41,"type"],[113,47,95,45],[113,52,95,50,"NodeType"],[113,61,95,58],[113,62,95,58,"NodeType"],[113,70,95,58],[113,71,95,59,"LerpColorFilter"],[113,86,95,74],[113,90,95,78,"colorFilter"],[113,101,95,89],[113,102,95,90,"children"],[113,110,95,98],[113,111,95,99,"length"],[113,117,95,105],[113,120,95,108],[113,121,95,109],[114,6,96,4],[114,10,96,8,"needsComposition"],[114,26,96,24],[114,28,96,26],[115,8,97,6,"recorder"],[115,16,97,14],[115,17,97,15,"composeColorFilter"],[115,35,97,33],[115,36,97,34],[115,37,97,35],[116,6,98,4],[117,4,99,2],[117,5,99,3],[117,6,99,4],[118,2,100,0],[118,3,100,1],[119,2,101,0],[119,8,101,6,"pushPathEffects"],[119,23,101,21],[119,26,101,24,"pushPathEffects"],[119,27,101,25,"recorder"],[119,35,101,33],[119,37,101,35,"pathEffects"],[119,48,101,46],[119,53,101,51],[120,4,102,2,"pathEffects"],[120,15,102,13],[120,16,102,14,"forEach"],[120,23,102,21],[120,24,102,22,"pathEffect"],[120,34,102,32],[120,38,102,36],[121,6,103,4],[121,10,103,8,"pathEffect"],[121,20,103,18],[121,21,103,19,"children"],[121,29,103,27],[121,30,103,28,"length"],[121,36,103,34],[121,39,103,37],[121,40,103,38],[121,42,103,40],[122,8,104,6,"pushPathEffects"],[122,23,104,21],[122,24,104,22,"recorder"],[122,32,104,30],[122,34,104,32,"pathEffect"],[122,44,104,42],[122,45,104,43,"children"],[122,53,104,51],[122,54,104,52],[123,6,105,4],[124,6,106,4,"recorder"],[124,14,106,12],[124,15,106,13,"pushPathEffect"],[124,29,106,27],[124,30,106,28,"pathEffect"],[124,40,106,38],[124,41,106,39,"type"],[124,45,106,43],[124,47,106,45,"pathEffect"],[124,57,106,55],[124,58,106,56,"props"],[124,63,106,61],[124,64,106,62],[125,6,107,4],[125,12,107,10,"needsComposition"],[125,28,107,26],[125,31,107,29,"pathEffect"],[125,41,107,39],[125,42,107,40,"type"],[125,46,107,44],[125,51,107,49,"NodeType"],[125,60,107,57],[125,61,107,57,"NodeType"],[125,69,107,57],[125,70,107,58,"SumPathEffect"],[125,83,107,71],[125,87,107,75,"pathEffect"],[125,97,107,85],[125,98,107,86,"children"],[125,106,107,94],[125,107,107,95,"length"],[125,113,107,101],[125,116,107,104],[125,117,107,105],[126,6,108,4],[126,10,108,8,"needsComposition"],[126,26,108,24],[126,28,108,26],[127,8,109,6,"recorder"],[127,16,109,14],[127,17,109,15,"composePathEffect"],[127,34,109,32],[127,35,109,33],[127,36,109,34],[128,6,110,4],[129,4,111,2],[129,5,111,3],[129,6,111,4],[130,2,112,0],[130,3,112,1],[131,2,113,0],[131,8,113,6,"pushImageFilters"],[131,24,113,22],[131,27,113,25,"pushImageFilters"],[131,28,113,26,"recorder"],[131,36,113,34],[131,38,113,36,"imageFilters"],[131,50,113,48],[131,55,113,53],[132,4,114,2,"imageFilters"],[132,16,114,14],[132,17,114,15,"forEach"],[132,24,114,22],[132,25,114,23,"imageFilter"],[132,36,114,34],[132,40,114,38],[133,6,115,4],[133,10,115,8,"imageFilter"],[133,21,115,19],[133,22,115,20,"children"],[133,30,115,28],[133,31,115,29,"length"],[133,37,115,35],[133,40,115,38],[133,41,115,39],[133,43,115,41],[134,8,116,6,"pushImageFilters"],[134,24,116,22],[134,25,116,23,"recorder"],[134,33,116,31],[134,35,116,33,"imageFilter"],[134,46,116,44],[134,47,116,45,"children"],[134,55,116,53],[134,56,116,54],[135,6,117,4],[136,6,118,4],[136,10,118,8],[136,14,118,8,"isImageFilter"],[136,19,118,21],[136,20,118,21,"isImageFilter"],[136,33,118,21],[136,35,118,22,"imageFilter"],[136,46,118,33],[136,47,118,34,"type"],[136,51,118,38],[136,52,118,39],[136,54,118,41],[137,8,119,6,"recorder"],[137,16,119,14],[137,17,119,15,"pushImageFilter"],[137,32,119,30],[137,33,119,31,"imageFilter"],[137,44,119,42],[137,45,119,43,"type"],[137,49,119,47],[137,51,119,49,"imageFilter"],[137,62,119,60],[137,63,119,61,"props"],[137,68,119,66],[137,69,119,67],[138,6,120,4],[138,7,120,5],[138,13,120,11],[138,17,120,15],[138,21,120,15,"isShader"],[138,26,120,23],[138,27,120,23,"isShader"],[138,35,120,23],[138,37,120,24,"imageFilter"],[138,48,120,35],[138,49,120,36,"type"],[138,53,120,40],[138,54,120,41],[138,56,120,43],[139,8,121,6,"recorder"],[139,16,121,14],[139,17,121,15,"pushShader"],[139,27,121,25],[139,28,121,26,"imageFilter"],[139,39,121,37],[139,40,121,38,"type"],[139,44,121,42],[139,46,121,44,"imageFilter"],[139,57,121,55],[139,58,121,56,"props"],[139,63,121,61],[139,65,121,63],[139,66,121,64],[139,67,121,65],[140,6,122,4],[141,6,123,4],[141,12,123,10,"needsComposition"],[141,28,123,26],[141,31,123,29,"imageFilter"],[141,42,123,40],[141,43,123,41,"type"],[141,47,123,45],[141,52,123,50,"NodeType"],[141,61,123,58],[141,62,123,58,"NodeType"],[141,70,123,58],[141,71,123,59,"BlendImageFilter"],[141,87,123,75],[141,91,123,79,"imageFilter"],[141,102,123,90],[141,103,123,91,"children"],[141,111,123,99],[141,112,123,100,"length"],[141,118,123,106],[141,121,123,109],[141,122,123,110],[142,6,124,4],[142,10,124,8,"needsComposition"],[142,26,124,24],[142,28,124,26],[143,8,125,6,"recorder"],[143,16,125,14],[143,17,125,15,"composeImageFilter"],[143,35,125,33],[143,36,125,34],[143,37,125,35],[144,6,126,4],[145,4,127,2],[145,5,127,3],[145,6,127,4],[146,2,128,0],[146,3,128,1],[147,2,129,0],[147,8,129,6,"pushShaders"],[147,19,129,17],[147,22,129,20,"pushShaders"],[147,23,129,21,"recorder"],[147,31,129,29],[147,33,129,31,"shaders"],[147,40,129,38],[147,45,129,43],[148,4,130,2,"shaders"],[148,11,130,9],[148,12,130,10,"forEach"],[148,19,130,17],[148,20,130,18,"shader"],[148,26,130,24],[148,30,130,28],[149,6,131,4],[149,10,131,8,"shader"],[149,16,131,14],[149,17,131,15,"children"],[149,25,131,23],[149,26,131,24,"length"],[149,32,131,30],[149,35,131,33],[149,36,131,34],[149,38,131,36],[150,8,132,6,"pushShaders"],[150,19,132,17],[150,20,132,18,"recorder"],[150,28,132,26],[150,30,132,28,"shader"],[150,36,132,34],[150,37,132,35,"children"],[150,45,132,43],[150,46,132,44],[151,6,133,4],[152,6,134,4,"recorder"],[152,14,134,12],[152,15,134,13,"pushShader"],[152,25,134,23],[152,26,134,24,"shader"],[152,32,134,30],[152,33,134,31,"type"],[152,37,134,35],[152,39,134,37,"shader"],[152,45,134,43],[152,46,134,44,"props"],[152,51,134,49],[152,53,134,51,"shader"],[152,59,134,57],[152,60,134,58,"children"],[152,68,134,66],[152,69,134,67,"length"],[152,75,134,73],[152,76,134,74],[153,4,135,2],[153,5,135,3],[153,6,135,4],[154,2,136,0],[154,3,136,1],[155,2,137,0],[155,8,137,6,"pushMaskFilters"],[155,23,137,21],[155,26,137,24,"pushMaskFilters"],[155,27,137,25,"recorder"],[155,35,137,33],[155,37,137,35,"maskFilters"],[155,48,137,46],[155,53,137,51],[156,4,138,2],[156,8,138,6,"maskFilters"],[156,19,138,17],[156,20,138,18,"length"],[156,26,138,24],[156,29,138,27],[156,30,138,28],[156,32,138,30],[157,6,139,4,"recorder"],[157,14,139,12],[157,15,139,13,"pushBlurMaskFilter"],[157,33,139,31],[157,34,139,32,"maskFilters"],[157,45,139,43],[157,46,139,44,"maskFilters"],[157,57,139,55],[157,58,139,56,"length"],[157,64,139,62],[157,67,139,65],[157,68,139,66],[157,69,139,67],[157,70,139,68,"props"],[157,75,139,73],[157,76,139,74],[158,4,140,2],[159,2,141,0],[159,3,141,1],[160,2,142,0],[160,8,142,6,"pushPaints"],[160,18,142,16],[160,21,142,19,"pushPaints"],[160,22,142,20,"recorder"],[160,30,142,28],[160,32,142,30,"paints"],[160,38,142,36],[160,43,142,41],[161,4,143,2,"paints"],[161,10,143,8],[161,11,143,9,"forEach"],[161,18,143,16],[161,19,143,17,"paint"],[161,24,143,22],[161,28,143,26],[162,6,144,4,"recorder"],[162,14,144,12],[162,15,144,13,"savePaint"],[162,24,144,22],[162,25,144,23,"paint"],[162,30,144,28],[162,31,144,29,"props"],[162,36,144,34],[162,38,144,36],[162,42,144,40],[162,43,144,41],[163,6,145,4],[163,12,145,10],[164,8,146,6,"colorFilters"],[164,20,146,18],[165,8,147,6,"maskFilters"],[165,19,147,17],[166,8,148,6,"shaders"],[166,15,148,13],[167,8,149,6,"imageFilters"],[167,20,149,18],[168,8,150,6,"pathEffects"],[169,6,151,4],[169,7,151,5],[169,10,151,8],[169,14,151,8,"sortNodeChildren"],[169,19,151,24],[169,20,151,24,"sortNodeChildren"],[169,36,151,24],[169,38,151,25,"paint"],[169,43,151,30],[169,44,151,31],[170,6,152,4,"pushColorFilters"],[170,22,152,20],[170,23,152,21,"recorder"],[170,31,152,29],[170,33,152,31,"colorFilters"],[170,45,152,43],[170,46,152,44],[171,6,153,4,"pushImageFilters"],[171,22,153,20],[171,23,153,21,"recorder"],[171,31,153,29],[171,33,153,31,"imageFilters"],[171,45,153,43],[171,46,153,44],[172,6,154,4,"pushMaskFilters"],[172,21,154,19],[172,22,154,20,"recorder"],[172,30,154,28],[172,32,154,30,"maskFilters"],[172,43,154,41],[172,44,154,42],[173,6,155,4,"pushShaders"],[173,17,155,15],[173,18,155,16,"recorder"],[173,26,155,24],[173,28,155,26,"shaders"],[173,35,155,33],[173,36,155,34],[174,6,156,4,"pushPathEffects"],[174,21,156,19],[174,22,156,20,"recorder"],[174,30,156,28],[174,32,156,30,"pathEffects"],[174,43,156,41],[174,44,156,42],[175,6,157,4,"recorder"],[175,14,157,12],[175,15,157,13,"restorePaintDeclaration"],[175,38,157,36],[175,39,157,37],[175,40,157,38],[176,4,158,2],[176,5,158,3],[176,6,158,4],[177,2,159,0],[177,3,159,1],[178,2,160,0],[178,8,160,6,"visitNode"],[178,17,160,15],[178,20,160,18,"visitNode"],[178,21,160,19,"recorder"],[178,29,160,27],[178,31,160,29,"node"],[178,35,160,33],[178,40,160,38],[179,4,161,2],[179,8,161,6,"node"],[179,12,161,10],[179,13,161,11,"type"],[179,17,161,15],[179,22,161,20,"NodeType"],[179,31,161,28],[179,32,161,28,"NodeType"],[179,40,161,28],[179,41,161,29,"Group"],[179,46,161,34],[179,48,161,36],[180,6,162,4,"recorder"],[180,14,162,12],[180,15,162,13,"saveGroup"],[180,24,162,22],[180,25,162,23],[180,26,162,24],[181,4,163,2],[182,4,164,2],[182,10,164,8],[183,6,165,4,"props"],[184,4,166,2],[184,5,166,3],[184,8,166,6,"node"],[184,12,166,10],[185,4,167,2],[185,10,167,8],[186,6,168,4,"colorFilters"],[186,18,168,16],[187,6,169,4,"maskFilters"],[187,17,169,15],[188,6,170,4,"drawings"],[188,14,170,12],[189,6,171,4,"shaders"],[189,13,171,11],[190,6,172,4,"imageFilters"],[190,18,172,16],[191,6,173,4,"pathEffects"],[191,17,173,15],[192,6,174,4,"paints"],[193,4,175,2],[193,5,175,3],[193,8,175,6],[193,12,175,6,"sortNodeChildren"],[193,17,175,22],[193,18,175,22,"sortNodeChildren"],[193,34,175,22],[193,36,175,23,"node"],[193,40,175,27],[193,41,175,28],[194,4,176,2],[194,10,176,8,"paint"],[194,15,176,13],[194,18,176,16,"processPaint"],[194,30,176,28],[194,31,176,29,"props"],[194,36,176,34],[194,37,176,35],[195,4,177,2],[195,10,177,8,"shouldPushPaint"],[195,25,177,23],[195,28,177,26,"paint"],[195,33,177,31],[195,37,177,35,"colorFilters"],[195,49,177,47],[195,50,177,48,"length"],[195,56,177,54],[195,59,177,57],[195,60,177,58],[195,64,177,62,"maskFilters"],[195,75,177,73],[195,76,177,74,"length"],[195,82,177,80],[195,85,177,83],[195,86,177,84],[195,90,177,88,"imageFilters"],[195,102,177,100],[195,103,177,101,"length"],[195,109,177,107],[195,112,177,110],[195,113,177,111],[195,117,177,115,"pathEffects"],[195,128,177,126],[195,129,177,127,"length"],[195,135,177,133],[195,138,177,136],[195,139,177,137],[195,143,177,141,"shaders"],[195,150,177,148],[195,151,177,149,"length"],[195,157,177,155],[195,160,177,158],[195,161,177,159],[196,4,178,2],[196,8,178,6,"shouldPushPaint"],[196,23,178,21],[196,25,178,23],[197,6,179,4,"recorder"],[197,14,179,12],[197,15,179,13,"savePaint"],[197,24,179,22],[197,25,179,23,"paint"],[197,30,179,28],[197,35,179,33],[197,39,179,37],[197,43,179,41,"paint"],[197,48,179,46],[197,53,179,51],[197,58,179,56],[197,59,179,57],[197,62,179,60,"paint"],[197,67,179,65],[197,70,179,68],[197,71,179,69],[197,72,179,70],[197,74,179,72],[197,79,179,77],[197,80,179,78],[198,6,180,4,"pushColorFilters"],[198,22,180,20],[198,23,180,21,"recorder"],[198,31,180,29],[198,33,180,31,"colorFilters"],[198,45,180,43],[198,46,180,44],[199,6,181,4,"pushImageFilters"],[199,22,181,20],[199,23,181,21,"recorder"],[199,31,181,29],[199,33,181,31,"imageFilters"],[199,45,181,43],[199,46,181,44],[200,6,182,4,"pushMaskFilters"],[200,21,182,19],[200,22,182,20,"recorder"],[200,30,182,28],[200,32,182,30,"maskFilters"],[200,43,182,41],[200,44,182,42],[201,6,183,4,"pushShaders"],[201,17,183,15],[201,18,183,16,"recorder"],[201,26,183,24],[201,28,183,26,"shaders"],[201,35,183,33],[201,36,183,34],[202,6,184,4,"pushPathEffects"],[202,21,184,19],[202,22,184,20,"recorder"],[202,30,184,28],[202,32,184,30,"pathEffects"],[202,43,184,41],[202,44,184,42],[203,6,185,4],[204,6,186,4],[204,10,186,8,"node"],[204,14,186,12],[204,15,186,13,"type"],[204,19,186,17],[204,24,186,22,"NodeType"],[204,33,186,30],[204,34,186,30,"NodeType"],[204,42,186,30],[204,43,186,31,"BackdropFilter"],[204,57,186,45],[204,59,186,47],[205,8,187,6,"recorder"],[205,16,187,14],[205,17,187,15,"saveBackdropFilter"],[205,35,187,33],[205,36,187,34],[205,37,187,35],[206,6,188,4],[206,7,188,5],[206,13,188,11],[207,8,189,6,"recorder"],[207,16,189,14],[207,17,189,15,"materializePaint"],[207,33,189,31],[207,34,189,32],[207,35,189,33],[208,6,190,4],[209,4,191,2],[210,4,192,2,"pushPaints"],[210,14,192,12],[210,15,192,13,"recorder"],[210,23,192,21],[210,25,192,23,"paints"],[210,31,192,29],[210,32,192,30],[211,4,193,2],[211,8,193,6,"node"],[211,12,193,10],[211,13,193,11,"type"],[211,17,193,15],[211,22,193,20,"NodeType"],[211,31,193,28],[211,32,193,28,"NodeType"],[211,40,193,28],[211,41,193,29,"Layer"],[211,46,193,34],[211,48,193,36],[212,6,194,4,"recorder"],[212,14,194,12],[212,15,194,13,"saveLayer"],[212,24,194,22],[212,25,194,23],[212,26,194,24],[213,4,195,2],[214,4,196,2],[214,10,196,8,"ctm"],[214,13,196,11],[214,16,196,14,"processCTM"],[214,26,196,24],[214,27,196,25,"props"],[214,32,196,30],[214,33,196,31],[215,4,197,2],[215,10,197,8,"shouldRestore"],[215,23,197,21],[215,26,197,24],[215,27,197,25],[215,28,197,26,"ctm"],[215,31,197,29],[215,35,197,33,"node"],[215,39,197,37],[215,40,197,38,"type"],[215,44,197,42],[215,49,197,47,"NodeType"],[215,58,197,55],[215,59,197,55,"NodeType"],[215,67,197,55],[215,68,197,56,"Layer"],[215,73,197,61],[216,4,198,2],[216,8,198,6,"ctm"],[216,11,198,9],[216,13,198,11],[217,6,199,4,"recorder"],[217,14,199,12],[217,15,199,13,"saveCTM"],[217,22,199,20],[217,23,199,21,"ctm"],[217,26,199,24],[217,27,199,25],[218,4,200,2],[219,4,201,2],[219,12,201,10,"node"],[219,16,201,14],[219,17,201,15,"type"],[219,21,201,19],[220,6,202,4],[220,11,202,9,"NodeType"],[220,20,202,17],[220,21,202,17,"NodeType"],[220,29,202,17],[220,30,202,18,"Box"],[220,33,202,21],[221,8,203,6],[221,14,203,12,"shadows"],[221,21,203,19],[221,24,203,22,"node"],[221,28,203,26],[221,29,203,27,"children"],[221,37,203,35],[221,38,203,36,"filter"],[221,44,203,42],[221,45,203,43,"n"],[221,46,203,44],[221,50,203,48,"n"],[221,51,203,49],[221,52,203,50,"type"],[221,56,203,54],[221,61,203,59,"NodeType"],[221,70,203,67],[221,71,203,67,"NodeType"],[221,79,203,67],[221,80,203,68,"BoxShadow"],[221,89,203,77],[222,8,204,6],[223,8,204,6],[223,9,205,7,"map"],[223,12,205,10],[223,13,205,11],[223,14,205,12],[224,10,206,8,"props"],[225,8,207,6],[225,9,207,7],[225,15,207,13],[226,10,208,8,"props"],[227,8,209,6],[227,9,209,7],[227,10,209,8],[227,11,209,9],[228,8,210,6,"recorder"],[228,16,210,14],[228,17,210,15,"drawBox"],[228,24,210,22],[228,25,210,23,"props"],[228,30,210,28],[228,32,210,30,"shadows"],[228,39,210,37],[228,40,210,38],[229,8,211,6],[230,6,212,4],[230,11,212,9,"NodeType"],[230,20,212,17],[230,21,212,17,"NodeType"],[230,29,212,17],[230,30,212,18,"Fill"],[230,34,212,22],[231,8,213,6,"recorder"],[231,16,213,14],[231,17,213,15,"drawPaint"],[231,26,213,24],[231,27,213,25],[231,28,213,26],[232,8,214,6],[233,6,215,4],[233,11,215,9,"NodeType"],[233,20,215,17],[233,21,215,17,"NodeType"],[233,29,215,17],[233,30,215,18,"Image"],[233,35,215,23],[234,8,216,6,"recorder"],[234,16,216,14],[234,17,216,15,"drawImage"],[234,26,216,24],[234,27,216,25,"props"],[234,32,216,30],[234,33,216,31],[235,8,217,6],[236,6,218,4],[236,11,218,9,"NodeType"],[236,20,218,17],[236,21,218,17,"NodeType"],[236,29,218,17],[236,30,218,18,"Circle"],[236,36,218,24],[237,8,219,6,"recorder"],[237,16,219,14],[237,17,219,15,"drawCircle"],[237,27,219,25],[237,28,219,26,"props"],[237,33,219,31],[237,34,219,32],[238,8,220,6],[239,6,221,4],[239,11,221,9,"NodeType"],[239,20,221,17],[239,21,221,17,"NodeType"],[239,29,221,17],[239,30,221,18,"Points"],[239,36,221,24],[240,8,222,6,"recorder"],[240,16,222,14],[240,17,222,15,"drawPoints"],[240,27,222,25],[240,28,222,26,"props"],[240,33,222,31],[240,34,222,32],[241,8,223,6],[242,6,224,4],[242,11,224,9,"NodeType"],[242,20,224,17],[242,21,224,17,"NodeType"],[242,29,224,17],[242,30,224,18,"Path"],[242,34,224,22],[243,8,225,6,"recorder"],[243,16,225,14],[243,17,225,15,"drawPath"],[243,25,225,23],[243,26,225,24,"props"],[243,31,225,29],[243,32,225,30],[244,8,226,6],[245,6,227,4],[245,11,227,9,"NodeType"],[245,20,227,17],[245,21,227,17,"NodeType"],[245,29,227,17],[245,30,227,18,"Rect"],[245,34,227,22],[246,8,228,6,"recorder"],[246,16,228,14],[246,17,228,15,"drawRect"],[246,25,228,23],[246,26,228,24,"props"],[246,31,228,29],[246,32,228,30],[247,8,229,6],[248,6,230,4],[248,11,230,9,"NodeType"],[248,20,230,17],[248,21,230,17,"NodeType"],[248,29,230,17],[248,30,230,18,"RRect"],[248,35,230,23],[249,8,231,6,"recorder"],[249,16,231,14],[249,17,231,15,"drawRRect"],[249,26,231,24],[249,27,231,25,"props"],[249,32,231,30],[249,33,231,31],[250,8,232,6],[251,6,233,4],[251,11,233,9,"NodeType"],[251,20,233,17],[251,21,233,17,"NodeType"],[251,29,233,17],[251,30,233,18,"Oval"],[251,34,233,22],[252,8,234,6,"recorder"],[252,16,234,14],[252,17,234,15,"drawOval"],[252,25,234,23],[252,26,234,24,"props"],[252,31,234,29],[252,32,234,30],[253,8,235,6],[254,6,236,4],[254,11,236,9,"NodeType"],[254,20,236,17],[254,21,236,17,"NodeType"],[254,29,236,17],[254,30,236,18,"Line"],[254,34,236,22],[255,8,237,6,"recorder"],[255,16,237,14],[255,17,237,15,"drawLine"],[255,25,237,23],[255,26,237,24,"props"],[255,31,237,29],[255,32,237,30],[256,8,238,6],[257,6,239,4],[257,11,239,9,"NodeType"],[257,20,239,17],[257,21,239,17,"NodeType"],[257,29,239,17],[257,30,239,18,"Patch"],[257,35,239,23],[258,8,240,6,"recorder"],[258,16,240,14],[258,17,240,15,"drawPatch"],[258,26,240,24],[258,27,240,25,"props"],[258,32,240,30],[258,33,240,31],[259,8,241,6],[260,6,242,4],[260,11,242,9,"NodeType"],[260,20,242,17],[260,21,242,17,"NodeType"],[260,29,242,17],[260,30,242,18,"Vertices"],[260,38,242,26],[261,8,243,6,"recorder"],[261,16,243,14],[261,17,243,15,"drawVertices"],[261,29,243,27],[261,30,243,28,"props"],[261,35,243,33],[261,36,243,34],[262,8,244,6],[263,6,245,4],[263,11,245,9,"NodeType"],[263,20,245,17],[263,21,245,17,"NodeType"],[263,29,245,17],[263,30,245,18,"DiffRect"],[263,38,245,26],[264,8,246,6,"recorder"],[264,16,246,14],[264,17,246,15,"drawDiffRect"],[264,29,246,27],[264,30,246,28,"props"],[264,35,246,33],[264,36,246,34],[265,8,247,6],[266,6,248,4],[266,11,248,9,"NodeType"],[266,20,248,17],[266,21,248,17,"NodeType"],[266,29,248,17],[266,30,248,18,"Text"],[266,34,248,22],[267,8,249,6,"recorder"],[267,16,249,14],[267,17,249,15,"drawText"],[267,25,249,23],[267,26,249,24,"props"],[267,31,249,29],[267,32,249,30],[268,8,250,6],[269,6,251,4],[269,11,251,9,"NodeType"],[269,20,251,17],[269,21,251,17,"NodeType"],[269,29,251,17],[269,30,251,18,"TextPath"],[269,38,251,26],[270,8,252,6,"recorder"],[270,16,252,14],[270,17,252,15,"drawTextPath"],[270,29,252,27],[270,30,252,28,"props"],[270,35,252,33],[270,36,252,34],[271,8,253,6],[272,6,254,4],[272,11,254,9,"NodeType"],[272,20,254,17],[272,21,254,17,"NodeType"],[272,29,254,17],[272,30,254,18,"TextBlob"],[272,38,254,26],[273,8,255,6,"recorder"],[273,16,255,14],[273,17,255,15,"drawTextBlob"],[273,29,255,27],[273,30,255,28,"props"],[273,35,255,33],[273,36,255,34],[274,8,256,6],[275,6,257,4],[275,11,257,9,"NodeType"],[275,20,257,17],[275,21,257,17,"NodeType"],[275,29,257,17],[275,30,257,18,"Glyphs"],[275,36,257,24],[276,8,258,6,"recorder"],[276,16,258,14],[276,17,258,15,"drawGlyphs"],[276,27,258,25],[276,28,258,26,"props"],[276,33,258,31],[276,34,258,32],[277,8,259,6],[278,6,260,4],[278,11,260,9,"NodeType"],[278,20,260,17],[278,21,260,17,"NodeType"],[278,29,260,17],[278,30,260,18,"Picture"],[278,37,260,25],[279,8,261,6,"recorder"],[279,16,261,14],[279,17,261,15,"drawPicture"],[279,28,261,26],[279,29,261,27,"props"],[279,34,261,32],[279,35,261,33],[280,8,262,6],[281,6,263,4],[281,11,263,9,"NodeType"],[281,20,263,17],[281,21,263,17,"NodeType"],[281,29,263,17],[281,30,263,18,"ImageSVG"],[281,38,263,26],[282,8,264,6,"recorder"],[282,16,264,14],[282,17,264,15,"drawImageSVG"],[282,29,264,27],[282,30,264,28,"props"],[282,35,264,33],[282,36,264,34],[283,8,265,6],[284,6,266,4],[284,11,266,9,"NodeType"],[284,20,266,17],[284,21,266,17,"NodeType"],[284,29,266,17],[284,30,266,18,"Paragraph"],[284,39,266,27],[285,8,267,6,"recorder"],[285,16,267,14],[285,17,267,15,"drawParagraph"],[285,30,267,28],[285,31,267,29,"props"],[285,36,267,34],[285,37,267,35],[286,8,268,6],[287,6,269,4],[287,11,269,9,"NodeType"],[287,20,269,17],[287,21,269,17,"NodeType"],[287,29,269,17],[287,30,269,18,"Skottie"],[287,37,269,25],[288,8,270,6,"recorder"],[288,16,270,14],[288,17,270,15,"drawSkottie"],[288,28,270,26],[288,29,270,27,"props"],[288,34,270,32],[288,35,270,33],[289,8,271,6],[290,6,272,4],[290,11,272,9,"NodeType"],[290,20,272,17],[290,21,272,17,"NodeType"],[290,29,272,17],[290,30,272,18,"Atlas"],[290,35,272,23],[291,8,273,6,"recorder"],[291,16,273,14],[291,17,273,15,"drawAtlas"],[291,26,273,24],[291,27,273,25,"props"],[291,32,273,30],[291,33,273,31],[292,8,274,6],[293,4,275,2],[294,4,276,2,"drawings"],[294,12,276,10],[294,13,276,11,"forEach"],[294,20,276,18],[294,21,276,19,"drawing"],[294,28,276,26],[294,32,276,30],[295,6,277,4,"visitNode"],[295,15,277,13],[295,16,277,14,"recorder"],[295,24,277,22],[295,26,277,24,"drawing"],[295,33,277,31],[295,34,277,32],[296,4,278,2],[296,5,278,3],[296,6,278,4],[297,4,279,2],[297,8,279,6,"shouldPushPaint"],[297,23,279,21],[297,25,279,23],[298,6,280,4,"recorder"],[298,14,280,12],[298,15,280,13,"restorePaint"],[298,27,280,25],[298,28,280,26],[298,29,280,27],[299,4,281,2],[300,4,282,2],[300,8,282,6,"shouldRestore"],[300,21,282,19],[300,23,282,21],[301,6,283,4,"recorder"],[301,14,283,12],[301,15,283,13,"restoreCTM"],[301,25,283,23],[301,26,283,24],[301,27,283,25],[302,4,284,2],[303,4,285,2],[303,8,285,6,"node"],[303,12,285,10],[303,13,285,11,"type"],[303,17,285,15],[303,22,285,20,"NodeType"],[303,31,285,28],[303,32,285,28,"NodeType"],[303,40,285,28],[303,41,285,29,"Group"],[303,46,285,34],[303,48,285,36],[304,6,286,4,"recorder"],[304,14,286,12],[304,15,286,13,"restoreGroup"],[304,27,286,25],[304,28,286,26],[304,29,286,27],[305,4,287,2],[306,2,288,0],[306,3,288,1],[307,2,289,7],[307,8,289,13,"visit"],[307,13,289,18],[307,16,289,21,"visit"],[307,17,289,22,"recorder"],[307,25,289,30],[307,27,289,32,"root"],[307,31,289,36],[307,36,289,41],[308,4,290,2,"root"],[308,8,290,6],[308,9,290,7,"forEach"],[308,16,290,14],[308,17,290,15,"node"],[308,21,290,19],[308,25,290,23],[309,6,291,4,"visitNode"],[309,15,291,13],[309,16,291,14,"recorder"],[309,24,291,22],[309,26,291,24,"node"],[309,30,291,28],[309,31,291,29],[310,4,292,2],[310,5,292,3],[310,6,292,4],[311,2,293,0],[311,3,293,1],[312,0,293,2],[312,3]],"functionMap":{"names":["<global>","processPaint","processCTM","pushColorFilters","colorFilters.forEach$argument_0","pushPathEffects","pathEffects.forEach$argument_0","pushImageFilters","imageFilters.forEach$argument_0","pushShaders","shaders.forEach$argument_0","pushMaskFilters","pushPaints","paints.forEach$argument_0","visitNode","node.children.filter$argument_0","node.children.filter.map$argument_0","drawings.forEach$argument_0","visit","root.forEach$argument_0"],"mappings":"AAA;4BCI;CDmD;mBEC;CF+B;yBGC;uBCC;GDS;CHC;wBKC;sBCC;GDS;CLC;yBOC;uBCC;GDa;CPC;oBSC;kBCC;GDK;CTC;wBWC;CXI;mBYC;iBCC;GDe;CZC;kBcC;2CC2C,kCD;WEE;QFI;mBGmE;GHE;CdU;qBkBC;eCC;GDE;ClBC"},"hasCjsExports":false},"type":"js/module"}]}